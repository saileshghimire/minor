[{"/home/sailesh/Downloads/minor-project/minorProject/src/index.js":"1","/home/sailesh/Downloads/minor-project/minorProject/src/reportWebVitals.js":"2","/home/sailesh/Downloads/minor-project/minorProject/src/App.js":"3","/home/sailesh/Downloads/minor-project/minorProject/src/components/Timer.js":"4","/home/sailesh/Downloads/minor-project/minorProject/src/components/Examsection.js":"5","/home/sailesh/Downloads/minor-project/minorProject/src/components/Examconfirmation.js":"6","/home/sailesh/Downloads/minor-project/minorProject/src/components/Top.js":"7","/home/sailesh/Downloads/minor-project/minorProject/src/components/QuestionBox.js":"8","/home/sailesh/Downloads/minor-project/minorProject/src/components/Questiongen.js":"9","/home/sailesh/Downloads/minor-project/minorProject/src/components/quizData.js":"10"},{"size":535,"mtime":1684393118505,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1684393118505,"results":"13","hashOfConfig":"12"},{"size":477,"mtime":1684393118505,"results":"14","hashOfConfig":"12"},{"size":3215,"mtime":1684393118505,"results":"15","hashOfConfig":"12"},{"size":278,"mtime":1684393118505,"results":"16","hashOfConfig":"12"},{"size":5250,"mtime":1684393118505,"results":"17","hashOfConfig":"12"},{"size":2210,"mtime":1684393118505,"results":"18","hashOfConfig":"12"},{"size":3131,"mtime":1684393118505,"results":"19","hashOfConfig":"12"},{"size":377,"mtime":1684394456852,"results":"20","hashOfConfig":"12"},{"size":682,"mtime":1684393118505,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"17a70jq",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/sailesh/Downloads/minor-project/minorProject/src/index.js",[],[],[],"/home/sailesh/Downloads/minor-project/minorProject/src/reportWebVitals.js",[],[],"/home/sailesh/Downloads/minor-project/minorProject/src/App.js",["59","60","61","62","63"],[],"// import logo from './logo.svg';\nimport './App.css';\nimport Top from './components/Top';\nimport Timer from './components/Timer';\nimport Examsection from './components/Examsection';\nimport Examconfirmation from './components/Examconfirmation';\nimport QuestionBox from './components/QuestionBox';\nimport Questiongen from './components/Questiongen';\n\n\n\nfunction App() {\n  return (\n    <>\n    {/* <Top /> */}\n    \n    <Examconfirmation />\n    \n    </>\n  );\n}\n\nexport default App;\n","/home/sailesh/Downloads/minor-project/minorProject/src/components/Timer.js",["64","65"],[],"import React, { useState , useEffect, useRef} from 'react';\r\n\r\nexport default function Timer(seconds) {\r\n    \r\n    // We need ref in this, because we are dealing\r\n    // with JS setInterval to keep track of it and\r\n    // stop it when needed\r\n    const Ref = useRef(null);\r\n  \r\n    // The state for our timer\r\n    const [timer, setTimer] = useState('02:00:00');\r\n  \r\n  \r\n    const getTimeRemaining = (e) => {\r\n        const total = Date.parse(e) - Date.parse(new Date());\r\n        const seconds = Math.floor((total / 1000) % 60);\r\n        const minutes = Math.floor((total / 1000 / 60) % 60);\r\n        const hours = Math.floor((total / 1000 / 60 / 60) % 24);\r\n        return {\r\n            total, hours, minutes, seconds\r\n        };\r\n    }\r\n  \r\n  \r\n    const startTimer = (e) => {\r\n        let { total, hours, minutes, seconds } \r\n                    = getTimeRemaining(e);\r\n        if (total >= 0) {\r\n  \r\n            // update the timer\r\n            // check if less than 10 then we need to \r\n            // add '0' at the beginning of the variable\r\n            setTimer(\r\n                (hours > 9 ? hours : '0' + hours) + ':' +\r\n                (minutes > 9 ? minutes : '0' + minutes) + ':'\r\n                + (seconds > 9 ? seconds : '0' + seconds)\r\n            )\r\n        }\r\n    }\r\n  \r\n  \r\n    const clearTimer = (e) => {\r\n  \r\n        // If you adjust it you should also need to\r\n        // adjust the Endtime formula we are about\r\n        // to code next    \r\n        setTimer('02:00:00');\r\n  \r\n        // If you try to remove this line the \r\n        // updating of timer Variable will be\r\n        // after 1000ms or 1sec\r\n        if (Ref.current) clearInterval(Ref.current);\r\n        const id = setInterval(() => {\r\n            startTimer(e);\r\n        }, 1000)\r\n        Ref.current = id;\r\n    }\r\n  \r\n    const getDeadTime = () => {\r\n        let deadline = new Date();\r\n  \r\n        // This is where you need to adjust if \r\n        // you entend to add more time\r\n        deadline.setSeconds(deadline.getSeconds() + 7200);\r\n        return deadline;\r\n    }\r\n  \r\n    // We can use useEffect so that when the component\r\n    // mount the timer will start as soon as possible\r\n  \r\n    // We put empty array to act as componentDid\r\n    // mount only\r\n    useEffect(() => {\r\n        clearTimer(getDeadTime());\r\n    }, []);\r\n  \r\n    // Another way to call the clearTimer() to start\r\n    // the countdown is via action event from the\r\n    // button first we create function to be called\r\n    // by the button\r\n    const onClickReset = () => {\r\n        clearTimer(getDeadTime());\r\n    }\r\n    \r\n    const  [examOver, setexamOver] = useState(false);\r\n\r\n    const examFinished = () => {\r\n        setexamOver(true);\r\n    }\r\n\r\n    if (examOver === \"00:00:00\"){\r\n        setexamOver(true);\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <button type=\"button\" class=\"btn btn-primary position-fixed\" style={{bottom: 50, right:20, zIndex: 101}} onClick ={examFinished}>Submit</button>\r\n            <div className=\"position-fixed\"  style={{bottom: 0, right:0, zIndex: 101, backgroundColor: \"grey\"}}>\r\n            \r\n                <h2>{timer} </h2> \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n    \r\n}","/home/sailesh/Downloads/minor-project/minorProject/src/components/Examsection.js",["66","67","68"],[],"import React, { useState } from 'react';\r\nimport QuestionBox from './QuestionBox';\r\nimport Timer from './Timer';\r\nimport Examconfirmation from './Examconfirmation';\r\n\r\nexport default function Examsection() {\r\n\r\n        \r\n   return (\r\n        <Examconfirmation />\r\n    \r\n   ) \r\n}","/home/sailesh/Downloads/minor-project/minorProject/src/components/Examconfirmation.js",["69","70","71"],[],"import React, { useState , useEffect, useRef} from 'react';\r\nimport QuestionBox from './QuestionBox';\r\nimport Questiongen from './Questiongen';\r\n\r\nexport default function Examconfirmation() {\r\n\r\n    //for confirmation page\r\n    const [examStart, setexamStart] = useState(false);\r\n\r\n    //for confirmation box\r\n    const boxStyle = {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        zIndex: 9999,\r\n      };\r\n    \r\n      const contentStyle = {\r\n        backgroundColor: '#fff',\r\n        padding: '20px',\r\n        borderRadius: '5px',\r\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',\r\n        maxWidth: '400px',\r\n        textAlign: 'center',\r\n      };\r\n    \r\n      const buttonStyle = {\r\n        margin: '0 10px',\r\n        padding: '10px 20px',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n      };\r\n    \r\n      const confirmButtonStyle = {\r\n        ...buttonStyle,\r\n        backgroundColor: 'grey',\r\n        color: '#fff',\r\n      };\r\n    \r\n      const cancelButtonStyle = {\r\n        ...buttonStyle,\r\n        backgroundColor: 'grey',\r\n        color: '#fff',\r\n      };\r\n\r\n      const handleExamStart= () => {\r\n            setexamStart(true); \r\n            console.log(examStart);\r\n      }\r\n\r\n      const handleExamAbort= () => {\r\n        setexamStart(false); \r\n      }\r\n\r\n    //Timer\r\n\r\n      // We need ref in this, because we are dealing\r\n    // with JS setInterval to keep track of it and\r\n    // stop it when needed\r\n    const Ref = useRef(null);\r\n  \r\n    // The state for our timer\r\n    const [timer, setTimer] = useState('02:00:00');\r\n  \r\n  \r\n    const getTimeRemaining = (e) => {\r\n        const total = Date.parse(e) - Date.parse(new Date());\r\n        const seconds = Math.floor((total / 1000) % 60);\r\n        const minutes = Math.floor((total / 1000 / 60) % 60);\r\n        const hours = Math.floor((total / 1000 / 60 / 60) % 24);\r\n        return {\r\n            total, hours, minutes, seconds\r\n        };\r\n    }\r\n  \r\n  \r\n    const startTimer = (e) => {\r\n        let { total, hours, minutes, seconds } \r\n                    = getTimeRemaining(e);\r\n        if (total >= 0) {\r\n  \r\n            // update the timer\r\n            // check if less than 10 then we need to \r\n            // add '0' at the beginning of the variable\r\n            setTimer(\r\n                (hours > 9 ? hours : '0' + hours) + ':' +\r\n                (minutes > 9 ? minutes : '0' + minutes) + ':'\r\n                + (seconds > 9 ? seconds : '0' + seconds)\r\n            )\r\n        }\r\n    }\r\n  \r\n  \r\n    const clearTimer = (e) => {\r\n  \r\n        // If you adjust it you should also need to\r\n        // adjust the Endtime formula we are about\r\n        // to code next    \r\n        setTimer('02:00:00');\r\n  \r\n        // If you try to remove this line the \r\n        // updating of timer Variable will be\r\n        // after 1000ms or 1sec\r\n        if (Ref.current) clearInterval(Ref.current);\r\n        const id = setInterval(() => {\r\n            startTimer(e);\r\n        }, 1000)\r\n        Ref.current = id;\r\n    }\r\n  \r\n    const getDeadTime = () => {\r\n        let deadline = new Date();\r\n  \r\n        // This is where you need to adjust if \r\n        // you entend to add more time\r\n        deadline.setSeconds(deadline.getSeconds() + 7200);\r\n        return deadline;\r\n    }\r\n  \r\n    // We can use useEffect so that when the component\r\n    // mount the timer will start as soon as possible\r\n  \r\n    // We put empty array to act as componentDid\r\n    // mount only\r\n    useEffect(() => {\r\n        clearTimer(getDeadTime());\r\n    }, []);\r\n  \r\n    // Another way to call the clearTimer() to start\r\n    // the countdown is via action event from the\r\n    // button first we create function to be called\r\n    // by the button\r\n    const onClickReset = () => {\r\n      clearTimer(getDeadTime());\r\n  }\r\n  \r\n  const  [examOver, setexamOver] = useState(false);\r\n\r\n  const examFinished = () => {\r\n      setexamOver(true);\r\n  }\r\n\r\n  if (examOver === \"00:00:00\"){\r\n      setexamOver(true);\r\n  }\r\n\r\n      \r\n    return(\r\n        <div>\r\n        {(!examStart && !examOver) && (\r\n        <>\r\n        <div style={boxStyle}>\r\n        <div style={contentStyle}>\r\n          <h3>Are you sure you are ready to take the exam?</h3>\r\n          <div>\r\n            <button style={confirmButtonStyle} onClick={handleExamStart} >\r\n              Yes, I am ready\r\n            </button>\r\n            <button style={cancelButtonStyle} onClick={handleExamAbort}>\r\n              Return back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div> \r\n      </>)}\r\n      {(examStart && !examOver) &&\r\n        (<>\r\n            <button type=\"button\" class=\"btn btn-primary position-fixed\" style={{bottom: 50, right:20, zIndex: 101}} onClick ={examFinished}>Submit</button>\r\n\r\n            <div className=\"position-fixed\"  style={{bottom: 0, right:0, zIndex: 101, backgroundColor: \"grey\"}}>\r\n                <h2>{timer} </h2> \r\n            </div>\r\n      <Questiongen />\r\n\r\n      </>)}\r\n\r\n      {examOver &&\r\n      (\r\n        <h1>The exam is finished.</h1>\r\n      )}\r\n      </div>\r\n    )\r\n}\r\n","/home/sailesh/Downloads/minor-project/minorProject/src/components/Top.js",["72","73","74","75"],[],"import React, { useState } from 'react';\r\n\r\nexport default function Header() {\r\n\r\n    return (   \r\n    <nav className=\"navbar navbar-expand-lg bg-body-tertiary navbar-dark bg-dark fixed-top mb-5\" style={{zIndex: 100}}>\r\n        <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">\r\n                    <img src=\"..\" alt=\"logo\"/>\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\" >Exams</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Notice</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Result</a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <div class=\"dropdown\">\r\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src=\"..\" alt=\"settings-icon\"/>\r\n                    </button>\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li><a class=\"dropdown-item\" href=\"#\">Account Settings</a></li>\r\n                        <li><a class=\"dropdown-item\" href=\"#\">Logout</a></li>\r\n                        <li><a class=\"dropdown-item\" href=\"#\">Report a problem</a></li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}","/home/sailesh/Downloads/minor-project/minorProject/src/components/QuestionBox.js",["76","77","78"],[],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function QuestionBox(props){\r\n\r\n    const [option, setoption] = useState({\r\n        isClicked: false,\r\n        selectedOption: \"\"\r\n    })\r\n\r\n    const [result, setresult] = useState(\"\");\r\n\r\n    const handleChange = event => {\r\n        const target = event.target\r\n        const value = +target.value; \r\n        //converting to integer , the checked value is later compared to an integer\r\n\r\n        setoption({\r\n            isClicked: true,\r\n            selectedOption: value\r\n        })\r\n\r\n        \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        \r\n        <div className=\"question-div mx-5 my-5 pt-3\">\r\n                <div className=\"question\" style={{fontWeight: 'bold', fontSize: 25}}>\r\n                    {props.item.id}.{props.item.question}\r\n                </div>\r\n                <form>\r\n                                <ul className=\"list-group list-group-horizontal my-2\" style={{fontSize: 15}}>\r\n                            <li className=\"list-group-item flex-fill text-start border-0\">\r\n                                <input className=\"form-check-input me-1\" type=\"radio\" name=\"listGroupRadio\" value={1} id=\"firstRadio\" onChange={handleChange} checked={option.selectedOption === 1 ? true : false}    />\r\n                                <label className=\"form-check-label\" htmlFor=\"firstRadio\">{props.item.options[0]}</label>\r\n                            </li>\r\n                            <li className=\"list-group-item flex-fill text-start border-0\">\r\n                                <input className=\"form-check-input me-1\" type=\"radio\" name=\"listGroupRadio\" value={2} id=\"secondRadio\" onChange={handleChange} checked={option.selectedOption === 2 ? true : false} />\r\n                                <label className=\"form-check-label\" htmlFor=\"secondRadio\">{props.item.options[1]}</label>\r\n                            </li>\r\n                            <li className=\"list-group-item flex-fill text-start border-0\">\r\n                                <input className=\"form-check-input me-1\" type=\"radio\" name=\"listGroupRadio\" value={3} id=\"thirdRadio\"\r\n                                onChange={handleChange} checked={option.selectedOption === 3 ? true : false} />\r\n                                <label className=\"form-check-label\" htmlFor=\"thirdRadio\">{props.item.options[2]}</label>\r\n                            </li>\r\n                            <li className=\"list-group-item flex-fill text-start border-0\">\r\n                                <input className=\"form-check-input me-1\" type=\"radio\" name=\"listGroupRadio\" value={4} id=\"fourthRadio\"\r\n                                onChange={handleChange} checked={option.selectedOption === 4 ? true : false} />\r\n                                <label className=\"form-check-label\" htmlFor=\"fourthRadio\">{props.item.options[3]}</label>\r\n                            </li>\r\n                        </ul>\r\n            </form>\r\n            <p className=\"paragraph m-2\">The selected option is: {option.selectedOption}</p>           \r\n        </div>\r\n    </>    \r\n    )\r\n}","/home/sailesh/Downloads/minor-project/minorProject/src/components/Questiongen.js",["79"],[],"/home/sailesh/Downloads/minor-project/minorProject/src/components/quizData.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":11},{"ruleId":"80","severity":1,"message":"84","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":13},{"ruleId":"80","severity":1,"message":"85","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":19},{"ruleId":"80","severity":1,"message":"86","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":19},{"ruleId":"80","severity":1,"message":"87","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":75,"column":8,"nodeType":"90","endLine":75,"endColumn":10,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"92","line":81,"column":11,"nodeType":"82","messageId":"83","endLine":81,"endColumn":23},{"ruleId":"80","severity":1,"message":"93","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"86","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":19},{"ruleId":"80","severity":1,"message":"84","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":13},{"ruleId":"80","severity":1,"message":"86","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":133,"column":8,"nodeType":"90","endLine":133,"endColumn":10,"suggestions":"94"},{"ruleId":"80","severity":1,"message":"92","line":139,"column":11,"nodeType":"82","messageId":"83","endLine":139,"endColumn":23},{"ruleId":"80","severity":1,"message":"93","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":35,"column":29,"nodeType":"97","endLine":35,"endColumn":63},{"ruleId":"95","severity":1,"message":"96","line":36,"column":29,"nodeType":"97","endLine":36,"endColumn":63},{"ruleId":"95","severity":1,"message":"96","line":37,"column":29,"nodeType":"97","endLine":37,"endColumn":63},{"ruleId":"80","severity":1,"message":"98","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":17},{"ruleId":"80","severity":1,"message":"99","line":11,"column":12,"nodeType":"82","messageId":"83","endLine":11,"endColumn":18},{"ruleId":"80","severity":1,"message":"100","line":11,"column":20,"nodeType":"82","messageId":"83","endLine":11,"endColumn":29},{"ruleId":"80","severity":1,"message":"93","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},"no-unused-vars","'Top' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'Examsection' is defined but never used.","'QuestionBox' is defined but never used.","'Questiongen' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearTimer'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'onClickReset' is assigned a value but never used.","'useState' is defined but never used.",["102"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PropTypes' is defined but never used.","'result' is assigned a value but never used.","'setresult' is assigned a value but never used.",{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},"Update the dependencies array to be: [clearTimer]",{"range":"106","text":"107"},{"range":"108","text":"107"},[2317,2319],"[clearTimer]",[3720,3722]]