{"ast":null,"code":"var _jsxFileName = \"/home/sailesh/Downloads/minor-project/minorProject/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Timer(seconds) {\n  _s();\n  // We need ref in this, because we are dealing\n  // with JS setInterval to keep track of it and\n  // stop it when needed\n  const Ref = useRef(null);\n\n  // The state for our timer\n  const [timer, setTimer] = useState('02:00:00');\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to \n      // add '0' at the beginning of the variable\n      setTimer((hours > 9 ? hours : '0' + hours) + ':' + (minutes > 9 ? minutes : '0' + minutes) + ':' + (seconds > 9 ? seconds : '0' + seconds));\n    }\n  };\n  const clearTimer = e => {\n    // If you adjust it you should also need to\n    // adjust the Endtime formula we are about\n    // to code next    \n    setTimer('02:00:00');\n\n    // If you try to remove this line the \n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // This is where you need to adjust if \n    // you entend to add more time\n    deadline.setSeconds(deadline.getSeconds() + 7200);\n    return deadline;\n  };\n\n  // We can use useEffect so that when the component\n  // mount the timer will start as soon as possible\n\n  // We put empty array to act as componentDid\n  // mount only\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n\n  // Another way to call the clearTimer() to start\n  // the countdown is via action event from the\n  // button first we create function to be called\n  // by the button\n  const onClickReset = () => {\n    clearTimer(getDeadTime());\n  };\n  const [examOver, setexamOver] = useState(false);\n  const examFinished = () => {\n    setexamOver(true);\n  };\n  if (examOver === \"00:00:00\") {\n    setexamOver(true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary position-fixed\",\n      style: {\n        bottom: 50,\n        right: 20,\n        zIndex: 101\n      },\n      onClick: examFinished,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-fixed\",\n      style: {\n        bottom: 0,\n        right: 0,\n        zIndex: 101,\n        backgroundColor: \"grey\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [timer, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Timer, \"ao106QTSsSqclcL3SbsRSXMawK8=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Timer","seconds","_s","Ref","timer","setTimer","getTimeRemaining","e","total","Date","parse","Math","floor","minutes","hours","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","onClickReset","examOver","setexamOver","examFinished","children","type","class","style","bottom","right","zIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","backgroundColor","_c","$RefreshReg$"],"sources":["/home/sailesh/Downloads/minor-project/minorProject/src/components/Timer.js"],"sourcesContent":["import React, { useState , useEffect, useRef} from 'react';\r\n\r\nexport default function Timer(seconds) {\r\n    \r\n    // We need ref in this, because we are dealing\r\n    // with JS setInterval to keep track of it and\r\n    // stop it when needed\r\n    const Ref = useRef(null);\r\n  \r\n    // The state for our timer\r\n    const [timer, setTimer] = useState('02:00:00');\r\n  \r\n  \r\n    const getTimeRemaining = (e) => {\r\n        const total = Date.parse(e) - Date.parse(new Date());\r\n        const seconds = Math.floor((total / 1000) % 60);\r\n        const minutes = Math.floor((total / 1000 / 60) % 60);\r\n        const hours = Math.floor((total / 1000 / 60 / 60) % 24);\r\n        return {\r\n            total, hours, minutes, seconds\r\n        };\r\n    }\r\n  \r\n  \r\n    const startTimer = (e) => {\r\n        let { total, hours, minutes, seconds } \r\n                    = getTimeRemaining(e);\r\n        if (total >= 0) {\r\n  \r\n            // update the timer\r\n            // check if less than 10 then we need to \r\n            // add '0' at the beginning of the variable\r\n            setTimer(\r\n                (hours > 9 ? hours : '0' + hours) + ':' +\r\n                (minutes > 9 ? minutes : '0' + minutes) + ':'\r\n                + (seconds > 9 ? seconds : '0' + seconds)\r\n            )\r\n        }\r\n    }\r\n  \r\n  \r\n    const clearTimer = (e) => {\r\n  \r\n        // If you adjust it you should also need to\r\n        // adjust the Endtime formula we are about\r\n        // to code next    \r\n        setTimer('02:00:00');\r\n  \r\n        // If you try to remove this line the \r\n        // updating of timer Variable will be\r\n        // after 1000ms or 1sec\r\n        if (Ref.current) clearInterval(Ref.current);\r\n        const id = setInterval(() => {\r\n            startTimer(e);\r\n        }, 1000)\r\n        Ref.current = id;\r\n    }\r\n  \r\n    const getDeadTime = () => {\r\n        let deadline = new Date();\r\n  \r\n        // This is where you need to adjust if \r\n        // you entend to add more time\r\n        deadline.setSeconds(deadline.getSeconds() + 7200);\r\n        return deadline;\r\n    }\r\n  \r\n    // We can use useEffect so that when the component\r\n    // mount the timer will start as soon as possible\r\n  \r\n    // We put empty array to act as componentDid\r\n    // mount only\r\n    useEffect(() => {\r\n        clearTimer(getDeadTime());\r\n    }, []);\r\n  \r\n    // Another way to call the clearTimer() to start\r\n    // the countdown is via action event from the\r\n    // button first we create function to be called\r\n    // by the button\r\n    const onClickReset = () => {\r\n        clearTimer(getDeadTime());\r\n    }\r\n    \r\n    const  [examOver, setexamOver] = useState(false);\r\n\r\n    const examFinished = () => {\r\n        setexamOver(true);\r\n    }\r\n\r\n    if (examOver === \"00:00:00\"){\r\n        setexamOver(true);\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <button type=\"button\" class=\"btn btn-primary position-fixed\" style={{bottom: 50, right:20, zIndex: 101}} onClick ={examFinished}>Submit</button>\r\n            <div className=\"position-fixed\"  style={{bottom: 0, right:0, zIndex: 101, backgroundColor: \"grey\"}}>\r\n            \r\n                <h2>{timer} </h2> \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n    \r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,eAAe,SAASC,KAAKA,CAACC,OAAO,EAAE;EAAAC,EAAA;EAEnC;EACA;EACA;EACA,MAAMC,GAAG,GAAGR,MAAM,CAAC,IAAI,CAAC;;EAExB;EACA,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,UAAU,CAAC;EAG9C,MAAMa,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC,GAAGE,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAAC,CAAC,CAAC;IACpD,MAAMR,OAAO,GAAGU,IAAI,CAACC,KAAK,CAAEJ,KAAK,GAAG,IAAI,GAAI,EAAE,CAAC;IAC/C,MAAMK,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEJ,KAAK,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;IACpD,MAAMM,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAEJ,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAI,EAAE,CAAC;IACvD,OAAO;MACHA,KAAK;MAAEM,KAAK;MAAED,OAAO;MAAEZ;IAC3B,CAAC;EACL,CAAC;EAGD,MAAMc,UAAU,GAAIR,CAAC,IAAK;IACtB,IAAI;MAAEC,KAAK;MAAEM,KAAK;MAAED,OAAO;MAAEZ;IAAQ,CAAC,GACxBK,gBAAgB,CAACC,CAAC,CAAC;IACjC,IAAIC,KAAK,IAAI,CAAC,EAAE;MAEZ;MACA;MACA;MACAH,QAAQ,CACJ,CAACS,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,GAAG,GAAGA,KAAK,IAAI,GAAG,IACtCD,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAG,GAAG,GAAGA,OAAO,CAAC,GAAG,GAAG,IAC1CZ,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAG,GAAG,GAAGA,OAAO,CAC5C,CAAC;IACL;EACJ,CAAC;EAGD,MAAMe,UAAU,GAAIT,CAAC,IAAK;IAEtB;IACA;IACA;IACAF,QAAQ,CAAC,UAAU,CAAC;;IAEpB;IACA;IACA;IACA,IAAIF,GAAG,CAACc,OAAO,EAAEC,aAAa,CAACf,GAAG,CAACc,OAAO,CAAC;IAC3C,MAAME,EAAE,GAAGC,WAAW,CAAC,MAAM;MACzBL,UAAU,CAACR,CAAC,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;IACRJ,GAAG,CAACc,OAAO,GAAGE,EAAE;EACpB,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIC,QAAQ,GAAG,IAAIb,IAAI,CAAC,CAAC;;IAEzB;IACA;IACAa,QAAQ,CAACC,UAAU,CAACD,QAAQ,CAACE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC;IACjD,OAAOF,QAAQ;EACnB,CAAC;;EAED;EACA;;EAEA;EACA;EACA5B,SAAS,CAAC,MAAM;IACZsB,UAAU,CAACK,WAAW,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvBT,UAAU,CAACK,WAAW,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAO,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAEhD,MAAMmC,YAAY,GAAGA,CAAA,KAAM;IACvBD,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,IAAID,QAAQ,KAAK,UAAU,EAAC;IACxBC,WAAW,CAAC,IAAI,CAAC;EACrB;EAGA,oBACI9B,OAAA,CAAAE,SAAA;IAAA8B,QAAA,gBAEIhC,OAAA;MAAQiC,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC,gCAAgC;MAACC,KAAK,EAAE;QAACC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAC,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAE;MAACC,OAAO,EAAGR,YAAa;MAAAC,QAAA,EAAC;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChJ3C,OAAA;MAAK4C,SAAS,EAAC,gBAAgB;MAAET,KAAK,EAAE;QAACC,MAAM,EAAE,CAAC;QAAEC,KAAK,EAAC,CAAC;QAAEC,MAAM,EAAE,GAAG;QAAEO,eAAe,EAAE;MAAM,CAAE;MAAAb,QAAA,eAE/FhC,OAAA;QAAAgC,QAAA,GAAKzB,KAAK,EAAC,GAAC;MAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA,eACR,CAAC;AAIX;AAACtC,EAAA,CAzGuBF,KAAK;AAAA2C,EAAA,GAAL3C,KAAK;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}